{"version":3,"sources":["core/button.js","core/input.js","constant/options.js","pages/adminAction/component/question.js","pages/adminAction/component/quiestions.js","pages/adminAction/component/newQuestionForm.js","pages/adminAction/component/newQuestion.js","pages/adminAction/index.js"],"names":["button","props","handleClick","classNameMod","className","onClick","e","children","input","type","handleChange","name","placeholder","value","onChange","target","id","options","label","Question","store","dispatch","question","useState","question_form_data","setQuestionFormData","useEffect","handleQuestion","updated_question","_question","JSON","parse","stringify","handleOptionA","updated_option_a","option_a","handleOptionB","updated_option_b","option_b","handleOptionC","updated_option_c","option_c","handleOptionD","updated_option_d","option_d","handleCorrectAnswer","correct_ans","correct_answer","style","defaultValue","getQuestionForm","QUESTION_UPDATE","SET_ERROR","error","QUESTION_DELETE","Questions","questions","quiz","map","index","NewQuestionForm","state","setQuestion","setOption_A","setOption_B","setOption_C","setOption_D","setCorrectAnswer","new_question_id","length","new_question","QUESTION_ADD","NewQuestion","React","isVisible","setIsVisible","duration","hideScrollbars","onClose","AdminAction"],"mappings":"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","file":"static/js/6.fe39cfbd.chunk.js","sourcesContent":["import React from 'react'\n\nimport './../styles/button.style.css'\n\nfunction button(props) {\n    const { handleClick, classNameMod } = props\n\n    return (\n\n        <button\n            className={`btn btn--${classNameMod}`}\n            onClick={(e) => handleClick(e)}\n        >\n            {props.children}\n        </button>\n\n    )\n\n}\n\nexport default button;","import React from 'react'\n\nimport './../styles/input.style.css'\n\nfunction input(props) {\n    const { type, handleChange, classNameMod, name, placeholder, value = null } = props\n\n    return (\n\n        <input\n            className={`input input--${type} input--${type}--${classNameMod}`}\n            type={type}\n            onChange={(e) => handleChange(e.target.value)}\n            id={`${classNameMod}_${type}_${name}`}\n            value={value}\n            placeholder={placeholder}\n        />\n\n    )\n\n}\n\nexport default input;","const options = [\n    { value: 'a', label: 'a' },\n    { value: 'b', label: 'b' },\n    { value: 'c', label: 'c' },\n    { value: 'd', label: 'd' }\n];\n\nexport default options","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\n\nimport { QUESTION_DELETE, SET_ERROR, QUESTION_UPDATE } from '../../../reducer/quiz.reducer/types.js'\n\nimport store from './../../../store'\n\nimport Input from './../../../core/input'\nimport Button from './../../../core/button'\n\nimport options from './../../../constant/options'\n\nfunction Question(props) {\n    const [state, dispatch] = store()\n    const { question } = props\n\n    const [question_form_data, setQuestionFormData] = useState(question)\n    useEffect(() => {\n        setQuestionFormData(question);\n    }, [question])\n\n    const handleQuestion = (updated_question) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.question = updated_question\n\n        setQuestionFormData(_question)\n    }\n\n    const handleOptionA = (updated_option_a) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.option_a = updated_option_a\n\n        setQuestionFormData(_question)\n    }\n\n    const handleOptionB = (updated_option_b) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.option_b = updated_option_b\n\n        setQuestionFormData(_question)\n    }\n\n    const handleOptionC = (updated_option_c) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.option_c = updated_option_c\n\n        setQuestionFormData(_question)\n    }\n\n    const handleOptionD = (updated_option_d) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.option_d = updated_option_d\n\n        setQuestionFormData(_question)\n    }\n\n    const handleCorrectAnswer = (correct_ans) => {\n        let _question = JSON.parse(JSON.stringify(question_form_data))\n        _question.correct_answer = correct_ans.value\n\n        setQuestionFormData(_question)\n    }\n\n    const updateQuestion = () => {\n        dispatch({\n            type: QUESTION_UPDATE,\n            id: question_form_data,\n        })\n        dispatch({ type: SET_ERROR, error: '' })\n    }\n\n    const deleteQuestion = () => {\n        dispatch({\n            type: QUESTION_DELETE,\n            id: question_form_data.id,\n        })\n        dispatch({ type: SET_ERROR, error: '' })\n    }\n\n    const getQuestionForm = (question) => {\n        return (<div className=\"wrapper\" style={{ \"padding\": \"24px 0px\" }}>\n            <Input\n                type=\"text\"\n                handleChange={handleQuestion}\n                classNameMod='question'\n                name={`question--${question.question}`}\n                placeholder='Question'\n                value={question.question}\n            />\n            <div>\n\n                <Input\n                    type=\"text\"\n                    handleChange={handleOptionA}\n                    classNameMod='option'\n                    name={`question--${question.question}_${question.option_a}`}\n                    placeholder='Option A'\n                    value={question.option_a}\n                />\n\n\n                <Input\n                    type=\"text\"\n                    handleChange={handleOptionB}\n                    classNameMod='option'\n                    name={`question--${question.question}_${question.option_b}`}\n                    placeholder='Option B'\n                    value={question.option_b}\n                />\n\n                <Input\n                    type=\"text\"\n                    handleChange={handleOptionC}\n                    classNameMod='option'\n                    name={`question--${question.question}_${question.option_c}`}\n                    placeholder='Option C'\n                    value={question.option_c}\n                />\n\n                <Input\n                    type=\"text\"\n                    handleChange={handleOptionD}\n                    classNameMod='option'\n                    name={`question--${question.question}_${question.option_d}`}\n                    placeholder='Option D'\n                    value={question.option_d}\n                />\n            </div>\n            <div style={{ \"width\": \"215px\" }}>\n                <Select\n                    defaultValue={{ \"value\": question.correct_answer, \"label\": question.correct_answer }}\n                    value={{ \"value\": question.correct_answer, \"label\": question.correct_answer }}\n                    onChange={handleCorrectAnswer}\n                    options={options}\n                    placeholder=\"Correct answer\"\n                />\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div className=\"question-action\">\n            <div className=\"question-details\">\n                {getQuestionForm(question_form_data)}\n            </div>\n            <div className=\"action-group\">\n                <Button\n                    classNameMod=\"update-question\"\n                    handleClick={updateQuestion}\n                >\n                    <span>Update</span>\n                </Button>\n\n                <Button\n                    classNameMod=\"delete-question\"\n                    handleClick={deleteQuestion}\n                >\n                    <span>Delete</span>\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Question","import React from 'react'\n\nimport store from './../../../store'\n\nimport Question from './question'\n\nimport './../styles/questions.style.css'\n\nfunction Questions() {\n    const [state] = store()\n    const { quiz } = state\n    const { questions } = quiz\n\n    const getQustions = () => questions.map((question, index) =>\n        <Question\n            question={question}\n            key={`question_${index}`}\n        />\n    )\n\n    return (\n        <div className=\"questions\">\n            {getQustions()}\n        </div>\n    )\n}\n\nexport default Questions","//This file is too ugle. all most every thing is hard coded :(\nimport React, { useState } from 'react'\nimport Select from 'react-select'\n\nimport { QUESTION_ADD } from './../../../reducer/quiz.reducer/types.js'\n\nimport store from './../../../store'\n\nimport Button from './../../../core/button'\nimport Input from './../../../core/input'\n\nimport options from './../../../constant/options'\n\nfunction NewQuestionForm() {\n    const [state, dispatch] = store()\n\n    const [question, setQuestion] = useState(null)\n    const [option_a, setOption_A] = useState(null)\n    const [option_b, setOption_B] = useState(null)\n    const [option_c, setOption_C] = useState(null)\n    const [option_d, setOption_D] = useState(null)\n    const [correct_ans, setCorrectAnswer] = useState(null)\n\n\n    const handleNewQuestion = (new_question) => setQuestion(new_question)\n    const handleOptionA = (option_a) => setOption_A(option_a)\n    const handleOptionB = (option_b) => setOption_B(option_b)\n    const handleOptionC = (option_c) => setOption_C(option_c)\n    const handleOptionD = (option_d) => setOption_D(option_d)\n    const handleCorrectAnswer = (correct_ans) => setCorrectAnswer(correct_ans)\n\n    const new_question_id = () => state.quiz.questions.length > 0 ? state.quiz.questions[state.quiz.questions.length - 1].id + 1 : 1\n\n    const addNewQuestion = () => {\n        const new_question = {\n            \"id\": new_question_id(),\n            \"question\": question,\n            \"option_a\": option_a,\n            \"option_b\": option_b,\n            \"option_c\": option_c,\n            \"option_d\": option_d,\n            \"correct_answer\": correct_ans.value\n        }\n        dispatch({\n            type: QUESTION_ADD,\n            new_question: new_question,\n        })\n    }\n\n    return (\n        <div className=\"wrapper\" style={{ \"padding\": \"24px 24px 200px 24px\" }}>\n            <Input\n                classNameMod=\"question\"\n                type=\"text\"\n                handleChange={handleNewQuestion}\n                name=\"new-question\"\n                placeholder=\"New question\"\n            />\n\n            <div className=\"wrapper\">\n                {question && <Input\n                    classNameMod=\"option\"\n                    type=\"text\"\n                    handleChange={handleOptionA}\n                    name={`option-a-${new_question_id()}`}\n                    placeholder=\"Option A\"\n                />}\n\n\n                {question && option_a && <Input\n                    classNameMod=\"option\"\n                    type=\"text\"\n                    handleChange={handleOptionB}\n                    name={`option-b-${new_question_id()}`}\n                    placeholder=\"Option B\"\n                />}\n\n                {question && option_a && option_b && <Input\n                    classNameMod=\"option\"\n                    type=\"text\"\n                    handleChange={handleOptionC}\n                    name={`option-c-${new_question_id()}`}\n                    placeholder=\"Option c\"\n                />}\n\n                {question && option_a && option_b && option_c && <Input\n                    classNameMod=\"option\"\n                    type=\"text\"\n                    handleChange={handleOptionD}\n                    name={`option-d-${new_question_id()}`}\n                    placeholder=\"Option d\"\n                />}\n\n            </div>\n\n            {question && option_a && option_b && option_c && option_d &&\n                <div className=\"wrapper\" style={{ \"width\": \"215px\" }}>\n                    <Select\n                        value={correct_ans}\n                        onChange={handleCorrectAnswer}\n                        options={options}\n                        placeholder=\"Correct answer\"\n                    />\n                </div>\n            }\n\n            {question && option_a && option_b && option_c && option_d && correct_ans &&\n                <Button\n                    classNameMod=\"open-modal\"\n                    handleClick={addNewQuestion}\n                >\n                    <span>Submit</span>\n                </Button>\n            }\n        </div>\n\n    )\n\n}\n\nexport default NewQuestionForm;","import React from \"react\"\nimport Drawer from \"react-bottom-drawer\"\n\nimport Button from './../../../core/button'\nimport NewQuestionForm from './newQuestionForm'\n\nexport default function NewQuestion() {\n    const [isVisible, setIsVisible] = React.useState(false)\n    const openDrawer = () => setIsVisible(true)\n    const closeDrawer = () => setIsVisible(false)\n\n    return (\n        <div className=\"new-question\">\n            <center>\n                <Button\n                    classNameMod=\"open-modal\"\n                    handleClick={openDrawer}\n                >\n                    <span>Add new question</span>\n                </Button>\n            </center>\n            <Drawer\n                duration={250}\n                hideScrollbars={true}\n                onClose={closeDrawer}\n                isVisible={isVisible}\n            >\n                <NewQuestionForm />\n            </Drawer>\n        </div>\n    );\n}","import React from 'react'\n\nimport Layout from './../../core/layout'\n\nimport Questions from './component/quiestions'\nimport NewQuestion from './component/newQuestion'\n\nimport './adminAction.style.css'\n\nfunction AdminAction() {\n    return (\n        <Layout>\n            <div className=\"container container--admin-action\">\n                <div id=\"bg\"></div>\n                <NewQuestion />\n                <Questions />\n            </div>\n        </Layout>\n    )\n}\n\nexport default AdminAction"],"sourceRoot":""}